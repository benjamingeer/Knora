app {
    deployed = false // possible values: true, false
    deployed = ${?KNORA_SALSAH1_DEPLOYED}

    workdir = "" // the absolut path to the SALSAH deployment folder. only used if 'deployed = true'.
    workdir = ${?KNORA_SALSAH1_WORKDIR}

    http
        {
            hostname = "0.0.0.0"
            hostname = ${?KNORA_SALSAH1_HOSTNAME}
            port = 3335
            port=${?KNORA_SALSAH1_PORT}
        }
    jsconf {
        external-webapi-url = "http://0.0.0.0:3333"
        external-webapi-url = ${?KNORA_SALSAH1_WEBAPI}
        external-sipi-url = "http://0.0.0.0:1024"
        external-sipi-url = ${?KNORA_SALSAH1_SIPI}
    }
    testing {
        headless = false
    }

}

akka {
    http {
        client {
            # The time period within which the TCP connecting process must be completed.
            connecting-timeout = 10 s

            # The time after which an idle connection will be automatically closed.
            # Set to `infinite` to completely disable idle timeouts.
            idle-timeout = infinite

            parsing {
                max-chunk-size             = 2m
                max-response-reason-length = 1024
            }
        }
    }

    host-connection-pool.client.idle-timeout = infinite
}


spray.can {
    client {
        # The max time period that a client connection will be waiting for a response
        # before triggering a request timeout. The timer for this logic is not started
        # until the connection is actually in a state to receive the response, which
        # may be quite some time after the request has been received from the
        # application!
        # There are two main reasons to delay the start of the request timeout timer:
        # 1. On the host-level API with pipelining disabled:
        #    If the request cannot be sent immediately because all connections are
        #    currently busy with earlier requests it has to be queued until a
        #    connection becomes available.
        # 2. With pipelining enabled:
        #    The request timeout timer starts only once the response for the
        #    preceding request on the connection has arrived.
        # Set to `infinite` to completely disable request timeouts.
        request-timeout = 180 s

        # The time period within which the TCP connecting process must be completed.
        # Set to `infinite` to disable.
        connecting-timeout = 180 s
    }
}
