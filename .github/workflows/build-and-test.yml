name: Build and Test

on:
  schedule:
    # run every midnight (on main) so that the first compile of the day from main is cached
    - cron: "0 0 * * *"
  push:

jobs:
  build-and-test:
    name: Build, test, client-test-data
    runs-on: ubuntu-latest
    steps:
      - name: Run preparatory steps
        uses: dasch-swiss/dsp-api/.github/actions/preparation@main
      - name: Run all tests and create client-test-data
        run: make test-and-create-client-test-data
      - name: Upload coverage data to codacy
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: ./target/scala-2.13/coverage-report/cobertura.xml
      - name: Upload coverage data to codecov 
        uses: codecov/codecov-action@v3
        with:
          files: ./target/scala-2.13/coverage-report/cobertura.xml

  test-docs-build:
    name: Test docs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
        with:
          fetch-depth: 15
      - name: Install requirements (pip, npm, apt)
        run: |
          python -m pip install --upgrade pip
          pip install -r docs/requirements.txt
          npm install --global typedoc
          sudo apt-get install graphviz
      - name: Build docs
        run: make docs-build

  check-formatting:
    name: Check formatting
    runs-on: ubuntu-latest
    steps:
      - name: Run preparatory steps
        uses: dasch-swiss/dsp-api/.github/actions/preparation@main
      - name: Check formatting
        run: make check
