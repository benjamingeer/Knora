name: CI

on:
  push:
    branches-ignore:
      - main
      - 'wip/*'
      - 'release-*'

jobs:
  build-and-test:
    name: Build and test
    runs-on: ubuntu-latest
    steps:
      - name: Run preparatory steps
        # if the branch name starts with release-, skip the step with successful outcome
        #if: startsWith(github.ref_name, 'release-') == false
        uses: dasch-swiss/dsp-api/.github/actions/preparation@main
      - name: Run all tests
        #if: startsWith(github.ref_name, 'release-') == false
        run: make test
      - name: Upload coverage data to codacy
        #if: startsWith(github.ref_name, 'release-') == false
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: ./target/scala-2.13/coverage-report/cobertura.xml
      - name: Upload coverage data to codecov
        #if: startsWith(github.ref_name, 'release-') == false
        uses: codecov/codecov-action@v3
        with:
          files: ./target/scala-2.13/coverage-report/cobertura.xml

  test-client-test-data:
    name: Test client-test-data
    runs-on: ubuntu-latest
    steps:
      - name: Run preparatory steps
        #if: startsWith(github.ref_name, 'release-') == false
        uses: dasch-swiss/dsp-api/.github/actions/preparation@main
      - name: Create client-test-data
        #if: startsWith(github.ref_name, 'release-') == false
        run: make client-test-data

  test-repository-upgrade:
    name: Test repository upgrade
    runs-on: ubuntu-latest
    steps:
      - name: Run preparatory steps
        #if: startsWith(github.ref_name, 'release-') == false
        uses: dasch-swiss/dsp-api/.github/actions/preparation@main
      - name: Test repository upgrade
        #if: startsWith(github.ref_name, 'release-') == false
        run: make test-repository-upgrade
      - name: Dump docker logs
        #if: startsWith(github.ref_name, 'release-') == false
        uses: jwalton/gh-docker-logs@v1

  test-docs-build:
    name: Test docs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        #if: startsWith(github.ref_name, 'release-') == false
        uses: actions/checkout@v3
      - name: Install requirements (pip, npm, apt)
        #if: startsWith(github.ref_name, 'release-') == false
        run: |
          python -m pip install --upgrade pip
          pip install -r docs/requirements.txt
          npm install --global typedoc
          sudo apt-get install graphviz
      - name: Build docs
        run: make docs-build

  check-formatting:
    name: Check formatting
    runs-on: ubuntu-latest
    steps:
      - name: Run preparatory steps
        uses: dasch-swiss/dsp-api/.github/actions/preparation@main
      - name: Check formatting
        run: make check
