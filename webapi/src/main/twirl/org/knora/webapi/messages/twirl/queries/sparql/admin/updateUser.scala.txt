@*
 * Copyright Â© 2021 - 2024 Swiss National Data and Service Center for the Humanities and/or DaSCH Service Platform contributors.
 * SPDX-License-Identifier: Apache-2.0
 *@

@import org.knora.webapi.IRI
@import org.knora.webapi.messages.util.KnoraSystemInstances

@**
 * Updates an existing user with the provided values.
 *
 * @param dataNamedGraph     the named graph to update.
 * @param userIri            the IRI of the user we want to update.
 * @param maybeUsername      the new optional value for username.
 * @param maybeEmail         the new optional value for email.
 * @param maybeGivenName     the new optional value for given name.
 * @param maybeFamilyName    the new optional value for family name.
 * @param maybeStatus        the new optional value for status.
 * @param maybeLang          the new optional value for lang.
 * @param maybeProjects      the new optional value for projects.
 * @param maybeProjectsAdmin the new optional value for project admin.
 * @param maybeGroups        the new optional value for groups.
 * @param maybeSystemAdmin   the new optional value for system admin.
 *@
@(adminNamedGraphIri: IRI,
  userIri: IRI,
  maybeUsername: Option[String],
  maybeEmail: Option[String],
  maybeGivenName: Option[String],
  maybeFamilyName: Option[String],
  maybeStatus: Option[Boolean],
  maybeLang: Option[String],
  maybeProjects: Option[Seq[IRI]],
  maybeProjectsAdmin: Option[Seq[IRI]],
  maybeGroups: Option[Seq[IRI]],
  maybeSystemAdmin: Option[Boolean])

PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX knora-admin: <http://www.knora.org/ontology/knora-admin#>

WITH <@adminNamedGraphIri>
DELETE {

    @* Delete current values, for which we have a new one. *@

    @if(maybeUsername.nonEmpty) {
        ?user knora-admin:username ?currentUsername .
    }

    @if(maybeEmail.nonEmpty) {
        ?user knora-admin:email ?currentEmail .
    }

    @if(maybeGivenName.nonEmpty) {
        ?user knora-admin:givenName ?currentGivenName .
    }

    @if(maybeFamilyName.nonEmpty) {
        ?user knora-admin:familyName ?currentFamilyName .
    }

    @if(maybeStatus.nonEmpty) {
        ?user knora-admin:status ?currentStatus .
    }

    @if(maybeLang.nonEmpty) {
        ?user knora-admin:preferredLanguage ?currentPreferredLanguage .
    }

    @if(maybeProjects.nonEmpty) {
        ?user knora-admin:isInProject ?currentProjects .
    }

    @if(maybeProjectsAdmin.nonEmpty) {
        ?user knora-admin:isInProjectAdminGroup ?currentProjectsAdmin .
    }

    @if(maybeGroups.nonEmpty) {
        ?user knora-admin:isInGroup ?currentGroups .
    }

    @if(maybeSystemAdmin.nonEmpty) {
        ?user knora-admin:isInSystemAdminGroup ?currentIsInSystemAdminGroup .
    }

} INSERT {

    @* Add the new values. *@

    @if(maybeUsername.nonEmpty) {
        ?user knora-admin:username "@maybeUsername.get"^^xsd:string .
    }

    @if(maybeEmail.nonEmpty) {
        ?user knora-admin:email "@maybeEmail.get"^^xsd:string .
    }

    @if(maybeGivenName.nonEmpty) {
        ?user knora-admin:givenName "@maybeGivenName.get"^^xsd:string .
    }

    @if(maybeFamilyName.nonEmpty) {
        ?user knora-admin:familyName "@maybeFamilyName.get"^^xsd:string .
    }

    @if(maybeStatus.nonEmpty) {
        ?user knora-admin:status "@maybeStatus.get"^^xsd:boolean .
    }

    @if(maybeLang.nonEmpty) {
        ?user knora-admin:preferredLanguage "@maybeLang.get"^^xsd:string .
    }

    @if(maybeProjects.nonEmpty) {
        @for(project <- maybeProjects.get) {
          ?user knora-admin:isInProject <@project> .
        }
    }

    @if(maybeProjectsAdmin.nonEmpty) {
        @for(project <- maybeProjectsAdmin.get) {
          ?user knora-admin:isInProjectAdminGroup <@project> .
        }
    }

    @if(maybeGroups.nonEmpty) {
        @for(group <- maybeGroups.get) {
          ?user knora-admin:isInGroup <@group> .
        }
    }

    @if(maybeSystemAdmin.nonEmpty) {
        ?user knora-admin:isInSystemAdminGroup "@maybeSystemAdmin.get"^^xsd:boolean .
    }

}

WHERE {
    BIND(IRI("@userIri") AS ?user)

    @* Get all current defined values. *@

    ?user knora-admin:username ?currentUsername .

    ?user knora-admin:email ?currentEmail .

    ?user knora-admin:givenName ?currentGivenName .

    ?user knora-admin:familyName ?currentFamilyName .

    ?user knora-admin:status ?currentStatus .

    ?user knora-admin:preferredLanguage ?currentPreferredLanguage .

    optional {?user knora-admin:isInProject ?currentProjects .}

    optional {?user knora-admin:isInProjectAdminGroup ?currentProjectsAdmin .}

    optional {?user knora-admin:isInGroup ?currentGroups .}

    ?user knora-admin:isInSystemAdminGroup ?currentIsInSystemAdminGroup .

    FILTER(!(?user = IRI("@KnoraSystemInstances.Users.AnonymousUser.id") || ?user = IRI("@KnoraSystemInstances.Users.SystemUser.id")))
}
