@*
 * Copyright Â© 2021 - 2024 Swiss National Data and Service Center for the Humanities and/or DaSCH Service Platform contributors.
 * SPDX-License-Identifier: Apache-2.0
 *@

@import org.knora.webapi.IRI
@import org.knora.webapi.messages.store.triplestoremessages.StringLiteralV2

@**
 * Updates an existing project with the provided values.
 *
 * @param dataNamedGraph     the named graph to update.
 * @param projectIri         the IRI of the project we want to update.
 * @param maybeShortname     the new optional value for shortname.
 * @param maybeLongname      the new optional value for longname.
 * @param maybeDescription   the new optional value for description.
 * @param maybeKeywords      the new optional value for keywords.
 * @param maybeLogo          the new optional value for logo.
 * @param maybeStatus        the new optional value for status.
 * @param maybeSelfjoin      the new optional value for selfjoin.
 *@
@(adminNamedGraphIri: IRI,
  projectIri: IRI,
  maybeShortname: Option[String],
  maybeLongname: Option[String],
  maybeDescriptions: Option[Seq[StringLiteralV2]],
  maybeKeywords: Option[Seq[String]],
  maybeLogo: Option[String],
  maybeStatus: Option[Boolean],
  maybeSelfjoin: Option[Boolean])

PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX knora-admin: <http://www.knora.org/ontology/knora-admin#>

WITH <@adminNamedGraphIri>
DELETE {

    @* Delete current values, for which we have a new one. *@

    @if(maybeShortname.nonEmpty) {
        ?project knora-admin:projectShortname ?currentShortname .
    }

    @if(maybeLongname.nonEmpty) {
        ?project knora-admin:projectLongname ?currentLongname .
    }

    @if(maybeDescriptions.nonEmpty) {
        ?project knora-admin:projectDescription ?currentDescription .
    }

    @if(maybeKeywords.nonEmpty) {
        ?project knora-admin:projectKeyword ?currentKeywords .
    }

    @if(maybeLogo.nonEmpty) {
        ?project knora-admin:projectLogo ?currentLogo .
    }

    @if(maybeStatus.nonEmpty) {
        ?project knora-admin:status ?currentStatus .
    }

    @if(maybeSelfjoin.nonEmpty) {
        ?project knora-admin:hasSelfJoinEnabled ?currentSelfjoin .
    }



} INSERT {

    @* Add the new values. *@

    @if(maybeShortname.nonEmpty) {
        ?project knora-admin:projectShortname "@maybeShortname.get"^^xsd:string .
    }

    @if(maybeLongname.nonEmpty) {
        ?project knora-admin:projectLongname """@maybeLongname.get"""^^xsd:string .
    }

    @if(maybeDescriptions.nonEmpty) {
        @for(description <- maybeDescriptions.get) {
            @if(description.language.nonEmpty) {
                ?project knora-admin:projectDescription """@description.value"""@@@{description.language.get} .
            } else {
                ?project knora-admin:projectDescription """@description.value"""^^xsd:string .
            }
        }
    }

    @if(maybeKeywords.nonEmpty) {
        @for(keyword <- maybeKeywords.get) {
          ?project knora-admin:projectKeyword "@keyword"^^xsd:string .
        }
    }

    @if(maybeLogo.nonEmpty) {
        ?project knora-admin:projectLogo "@maybeLogo.get"^^xsd:string .
    }

    @if(maybeStatus.nonEmpty) {
        ?project knora-admin:status "@maybeStatus.get"^^xsd:boolean .
    }

    @if(maybeSelfjoin.nonEmpty) {
        ?project knora-admin:hasSelfJoinEnabled "@maybeSelfjoin.get"^^xsd:boolean .
    }
}

WHERE {
    BIND(IRI("@projectIri") AS ?project)

    @* Get all current defined values. *@

    ?project knora-admin:projectShortname ?currentShortname .

    optional {?project knora-admin:projectLongname ?currentLongname .}

    optional {?project knora-admin:projectDescription ?currentDescription .}

    optional {?project knora-admin:projectKeyword ?currentKeywords .}

    optional {?project knora-admin:projectLogo ?currentLogo .}

    ?project knora-admin:status ?currentStatus .

    ?project knora-admin:hasSelfJoinEnabled ?currentSelfjoin .
}
