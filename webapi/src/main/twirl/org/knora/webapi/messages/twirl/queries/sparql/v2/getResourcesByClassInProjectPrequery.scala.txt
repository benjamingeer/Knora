@*
 * Copyright Â© 2021 - 2022 Swiss National Data and Service Center for the Humanities and/or DaSCH Service Platform contributors.
 * SPDX-License-Identifier: Apache-2.0
 *@

@import org.knora.webapi._
@import org.knora.webapi.messages.SmartIri

@*
 * Constructs a prequery that gets the IRIs of resources from the specified project.
 *
 * @param triplestore           the name of the triplestore being used.
 * @param projectIri            the IRI of the project.
 * @param resourceClassIri      the IRI of the resource class.
 * @param maybeOrderByProperty  the IRI of the property to order by.
 * @param maybeOrderByValuePredicate the predicate of a Knora value class whose object will be used in ORDER BY.
 * @param offset                the OFFSET to be used.
 * @param limit                 the LIMIT to be used.
 *@
@(triplestore: String,
  projectIri: IRI,
  resourceClassIri: SmartIri,
  maybeOrderByProperty: Option[SmartIri],
  maybeOrderByValuePredicate: Option[SmartIri],
  offset: Int,
  limit: Int)

@if(triplestore.startsWith("graphdb")) {
    @{
        org.knora.webapi.messages.twirl.queries.sparql.v2.txt.getResourcesByClassInProjectPrequeryGraphDB(projectIri = projectIri,
                                                                   resourceClassIri = resourceClassIri,
                                                                   maybeOrderByProperty = maybeOrderByProperty,
                                                                   maybeOrderByValuePredicate = maybeOrderByValuePredicate,
                                                                   offset = offset,
                                                                   limit = limit)
    }
} else {
    @{
        org.knora.webapi.messages.twirl.queries.sparql.v2.txt.getResourcesByClassInProjectPrequeryStandard(triplestore = triplestore,
                                                                    projectIri = projectIri,
                                                                    resourceClassIri = resourceClassIri,
                                                                    maybeOrderByProperty = maybeOrderByProperty,
                                                                    maybeOrderByValuePredicate = maybeOrderByValuePredicate,
                                                                    offset = offset,
                                                                    limit = limit)
    }
}
