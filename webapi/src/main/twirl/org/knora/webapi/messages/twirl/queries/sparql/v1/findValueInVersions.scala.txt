@*
 * Copyright Â© 2021 Data and Service Center for the Humanities and/or DaSCH Service Platform contributors.
 * SPDX-License-Identifier: Apache-2.0
 *@

@import org.knora.webapi.IRI

@**
 * Searches for a value in the version history of the values of a resource property. If the value is found, returns
 * all assertions about it. If the value is not found, returns no rows.
 *
 * @param triplestore the name of the triplestore being used.
 * @param resourceIri the resource to search.
 * @param propertyIri the property to search.
 * @param searchValueIri the IRI of the value to look for.
 *@
@(triplestore: String,
  resourceIri: IRI,
  propertyIri: IRI,
  searchValueIri: IRI)

prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>
prefix knora-base: <http://www.knora.org/ontology/knora-base#>

SELECT ?objPred ?objObj ?predStandoff ?objStandoff
@* Ensure that inference is not used in this query. *@
@if(triplestore.startsWith("graphdb")) {
    FROM <http://www.ontotext.com/explicit>
}
WHERE {
    {
        BIND(IRI("@resourceIri") as ?resource)
        BIND(IRI("@propertyIri") as ?property)
        BIND(IRI("@searchValueIri") as ?searchValue)

        ?resource ?property ?currentValue .
        ?currentValue knora-base:previousValue* ?searchValue .
        ?searchValue ?objPred ?objObj .

        FILTER NOT EXISTS {
            ?resource knora-base:isDeleted true .
        }

        FILTER NOT EXISTS {
            ?currentValue knora-base:isDeleted true .
        }

        FILTER(?objPred != knora-base:attachedToProject)

        OPTIONAL {
            FILTER(?objPred = knora-base:valueHasStandoff) .
            ?objObj ?predStandoff ?objStandoff .
        }
    }
    UNION
    {
        BIND(IRI("@resourceIri") as ?resource)
        BIND(IRI("@propertyIri") as ?property)
        BIND(IRI("@searchValueIri") as ?searchValue)

        ?resource ?property ?currentValue ;
            knora-base:attachedToProject ?resourceProject .

        ?currentValue knora-base:previousValue* ?searchValue .

        FILTER NOT EXISTS {
            ?resource knora-base:isDeleted true .
        }

        FILTER NOT EXISTS {
            ?currentValue knora-base:isDeleted true .
        }

        @* Return the project of the resource that contains the value. *@

        BIND(knora-base:attachedToProject AS ?objPred)
        BIND(?resourceProject AS ?objObj)
    }
}
