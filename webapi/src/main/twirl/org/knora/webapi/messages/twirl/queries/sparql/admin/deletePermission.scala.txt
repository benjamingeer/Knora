@*
 * Copyright Â© 2021 Data and Service Center for the Humanities and/or DaSCH Service Platform contributors.
 * SPDX-License-Identifier: Apache-2.0
 *@

@import org.knora.webapi.IRI
@import org.knora.webapi.messages.store.triplestoremessages.StringLiteralV2

@**
 * Delete an existing permission.
 *
 * @param namedGraphIri           the named graph to update.
 * @param triplestore             the name of the triplestore being used. The template uses this value to exclude
                                  inferred results from the WHERE clause of the update.
 * @param permissionIri           the IRI of the permission we want to delete.
 *@

@(namedGraphIri: IRI,
  triplestore: String,
  permissionIri: IRI
  )

PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX knora-admin: <http://www.knora.org/ontology/knora-admin#>

DELETE {
    GRAPH ?dataNamedGraph {
        ?permission ?p ?o .
    }
}

@*

GraphDB's consistency checking requires reasoning, but reasoning interferes with certain things
in the WHERE clauses of our SPARQL updates, so we set a GraphDB-specific flag to return only
explicit statements in the WHERE clause here.

*@

@triplestore match {
    case "graphdb" | "graphdb-free" => {
        USING <http://www.ontotext.com/explicit>
    }

    case other => {}
}

WHERE {
    BIND(IRI("@permissionIri") AS ?permission)
    BIND(IRI("@namedGraphIri") AS ?dataNamedGraph)
    ?permission ?p ?o .
}
