@*
 * Copyright Â© 2015-2021 the contributors (see Contributors.md).
 *
 * This file is part of Knora.
 *
 * Knora is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Knora is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public
 * License along with Knora.  If not, see <http://www.gnu.org/licenses/>.
 *@

@import org.knora.webapi.IRI
@import org.knora.webapi.messages.store.triplestoremessages.StringLiteralV2

@**
 * Updates an existing permission's properties.
 *
 * @param namedGraphIri           the named graph to update.
 * @param triplestore             the name of the triplestore being used. The template uses this value to exclude
                                  inferred results from the WHERE clause of the update.
 * @param permissionIri           the IRI of the permission we want to update.
 * @param maybeGroup              the IRI of the new group.
 * @param maybeHasPermissions     the new set of permission values as string.
 * @param maybeResourceClass      the new resource class IRI.
 * @param maybeProperty           the new property IRI.
 *@

@(namedGraphIri: IRI,
  triplestore: String,
  permissionIri: IRI,
  maybeGroup: Option[IRI],
  maybeHasPermissions: Option[String],
  maybeResourceClass: Option[IRI],
  maybeProperty: Option[IRI]
  )

PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX knora-admin: <http://www.knora.org/ontology/knora-admin#>
PREFIX knora-base: <http://www.knora.org/ontology/knora-base#>

WITH <@namedGraphIri>
DELETE {
    @if(maybeGroup.isDefined){
        ?permissionIri knora-admin:forGroup ?currentGroup .
        ?permissionIri knora-admin:forResourceClass ?currentResourceClass .
        ?permissionIri knora-admin:forProperty ?currentProperty .
  	}

  	@if(maybeHasPermissions.isDefined){
        ?permissionIri knora-base:hasPermissions ?currentHasPermissions .
    }

    @if(maybeResourceClass.isDefined){
        ?permissionIri knora-admin:forResourceClass ?currentResourceClass .
        ?permissionIri knora-admin:forGroup ?currentGroup .
    }

    @if(maybeProperty.isDefined){
        ?permissionIri knora-admin:forProperty ?currentProperty .
        ?permissionIri knora-admin:forGroup ?currentGroup .
    }

} INSERT {
    @if(maybeGroup.isDefined){
        ?permissionIri knora-admin:forGroup <@maybeGroup.get> .
    }

    @if(maybeHasPermissions.isDefined){
        ?permissionIri knora-base:hasPermissions "@maybeHasPermissions.get"^^xsd:string .
    }

    @if(maybeResourceClass.isDefined){
       ?permissionIri knora-admin:forResourceClass <@maybeResourceClass.get> .
    }

    @if(maybeProperty.isDefined){
        ?permissionIri knora-admin:forProperty <@maybeProperty.get> .
    }
}

@*

GraphDB's consistency checking requires reasoning, but reasoning interferes with certain things
in the WHERE clauses of our SPARQL updates, so we set a GraphDB-specific flag to return only
explicit statements in the WHERE clause here.

*@

@triplestore match {
    case "graphdb" | "graphdb-free" => {
        USING <http://www.ontotext.com/explicit>
    }

    case other => {}
}

WHERE {
    BIND(IRI("@permissionIri") AS ?permissionIri)

    {
    ?permissionIri rdf:type knora-admin:AdministrativePermission .
    } UNION {
    ?permissionIri rdf:type knora-admin:DefaultObjectAccessPermission .
    }

    optional{?permissionIri knora-admin:forGroup ?currentGroup .}
    optional{?permissionIri knora-admin:forResourceClass ?currentResourceClass .}
    optional{?permissionIri knora-admin:forProperty ?currentProperty .}
    optional{?permissionIri knora-base:hasPermissions ?currentHasPermissions .}
}