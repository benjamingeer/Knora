@*
 * Copyright Â© 2015-2021 the contributors (see Contributors.md).
 *
 * This file is part of Knora.
 *
 * Knora is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Knora is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public
 * License along with Knora.  If not, see <http://www.gnu.org/licenses/>.
 *@

@import org.knora.webapi.IRI
@import org.knora.webapi.messages.util.KnoraSystemInstances

@**
 * Updates an existing user with the provided values.
 *
 * @param dataNamedGraph     the named graph to update.
 * @param triplestore        the name of the triplestore being used. The template uses this value to exclude inferred
                             results from the WHERE clause of the update.
 * @param userIri            the IRI of the user we want to update.
 * @param newPassword      the new optional value for value for password.
 *@
@(adminNamedGraphIri: IRI,
  triplestore: String,
  userIri: IRI,
  newPassword: String)

PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX knora-admin: <http://www.knora.org/ontology/knora-admin#>

WITH <@adminNamedGraphIri>
DELETE {

    @* Delete current value, for which we have a new one. *@

    @if(newPassword.nonEmpty) {
        ?user knora-admin:password ?currentPassword .
    }

} INSERT {

    @* Add the new value. *@

    @if(newPassword.nonEmpty) {
        ?user knora-admin:password "@newPassword"^^xsd:string .
    }

}

@*

GraphDB's consistency checking requires reasoning, but reasoning interferes with certain things
in the WHERE clauses of our SPARQL updates, so we set a GraphDB-specific flag to return only
explicit statements in the WHERE clause here.

*@

@triplestore match {
    case "graphdb" | "graphdb-free" => {
        USING <http://www.ontotext.com/explicit>
    }

    case other => {}
}

WHERE {
    BIND(IRI("@userIri") AS ?user)

    @* Get all current defined values. *@

    ?user knora-admin:password ?currentPassword .

    FILTER(!(?user = IRI("@KnoraSystemInstances.Users.AnonymousUser.id") || ?user = IRI("@KnoraSystemInstances.Users.SystemUser.id")))
}
