@*
 * Copyright Â© 2021 - 2023 Swiss National Data and Service Center for the Humanities and/or DaSCH Service Platform contributors.
 * SPDX-License-Identifier: Apache-2.0
 *@

@import java.time.Instant
@import java.util.UUID
@import org.knora.webapi._
@import org.knora.webapi.messages.StringFormatter
@import org.knora.webapi.messages.twirl.SparqlTemplateLinkUpdate

@**
 * Inserts a new link between resources.
 *
 * @param dataNamedGraph    the named graph in which the project stores its data.
 * @param resourceIri       the resource that is the source of the link.
 * @param linkUpdate        a [[LinkUpdate]] object describing the link to insert.
 * @param newValueUUID      the UUID to be attached to the value.
 * @param creationDate      an xsd:dateTimeStamp that will be attached to the link value.
 * @param maybeComment      an optional comment on the link.
 * @param stringFormatter a [[StringFormatter]].
 *
 * To find out whether the update succeeded, the application must query the link.
 *@
@(dataNamedGraph: IRI,
  resourceIri: IRI,
  linkUpdate: SparqlTemplateLinkUpdate,
  newValueUUID: UUID,
  creationDate: Instant,
  maybeComment: Option[String],
  stringFormatter: StringFormatter)

PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX knora-base: <http://www.knora.org/ontology/knora-base#>

DELETE {
    GRAPH ?dataNamedGraph {
        @* Delete the link source's last modification date so we can update it. *@
        ?resource knora-base:lastModificationDate ?resourceLastModificationDate .
    }
} INSERT {
    GRAPH ?dataNamedGraph {
        @* Update the link source's last modification date. *@
        ?resource knora-base:lastModificationDate "@creationDate"^^xsd:dateTime .

        @{
            org.knora.webapi.messages.twirl.queries.sparql.v2.txt.generateInsertStatementsForCreateLink(resourceIri = resourceIri,
                                                                        linkUpdate = linkUpdate,
                                                                        creationDate = creationDate,
                                                                        newValueUUID = newValueUUID,
                                                                        maybeComment = maybeComment,
                                                                        maybeValueHasOrder = None)
        }

    }
}

WHERE {
    BIND(IRI("@dataNamedGraph") AS ?dataNamedGraph)
    BIND(IRI("@resourceIri") AS ?resource)

    @* Do nothing if the resource doesn't exist, is marked as deleted, or isn't actually a resource. *@

    ?resource rdf:type ?resourceClass ;
        knora-base:isDeleted false .
    ?resourceClass rdfs:subClassOf* knora-base:Resource .

    @* Get the link source's last modification date, if it has one, so we can update it. *@

    OPTIONAL {
        ?resource knora-base:lastModificationDate ?resourceLastModificationDate .
    }

    @{
        org.knora.webapi.messages.twirl.queries.sparql.v2.txt.generateWhereStatementsForCreateLink(resourceIri = resourceIri,
                                                                   linkUpdate = linkUpdate)
    }
}
