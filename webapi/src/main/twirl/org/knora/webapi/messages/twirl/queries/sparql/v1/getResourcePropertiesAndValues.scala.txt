@*
 * Copyright Â© 2021 - 2022 Swiss National Data and Service Center for the Humanities and/or DaSCH Service Platform contributors.
 * SPDX-License-Identifier: Apache-2.0
 *@

@import org.knora.webapi.IRI

@**
 * Gets the values of all the Knora properties of a resource that have values using SPARQL w/o inference.
 *
 * @param resourceIri the IRI of the resource to be queried.
 *@
@(resourceIri: IRI)

prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>
prefix knora-base: <http://www.knora.org/ontology/knora-base#>

SELECT ?prop ?isLinkProp ?isLinkValueProp ?obj ?objPred ?objObj ?predStandoff ?objStandoff
WHERE {
    BIND(IRI("@resourceIri") as ?resource)

    ?resource rdf:type ?resourceClass .
    ?resourceClass rdfs:subClassOf* knora-base:Resource .

    FILTER NOT EXISTS {
        ?resource knora-base:isDeleted true .
    }

    {
        @* Get properties that point to Value objects. *@

        ?prop rdfs:subPropertyOf* knora-base:hasValue .

        @* Exclude FileValue objects, because if the resource is a representation, we get its file values with its resource info. *@
        FILTER NOT EXISTS {
            ?prop rdfs:subPropertyOf* knora-base:hasFileValue .
        }

        @* Identify properties that point to LinkValue objects. *@
        OPTIONAL {
            ?prop rdfs:subPropertyOf* knora-base:hasLinkToValue .

            BIND(true as ?isLinkValueProp)
        }

        {
            @* Get the project of the containing resource. *@

            ?resource ?prop ?obj .

            FILTER NOT EXISTS {
                ?obj knora-base:isDeleted true .
            }

            ?resource knora-base:attachedToProject ?resourceProject .
            BIND(knora-base:attachedToProject AS ?objPred)
            BIND(COALESCE(?valueProject, ?resourceProject) AS ?objObj)
        }
        UNION
        {
            @* Get the value's standoff markup nodes if it has any. *@

            ?resource ?prop ?obj .

            FILTER NOT EXISTS {
                ?obj knora-base:isDeleted true .
            }

            ?obj a knora-base:TextValue .
            BIND(knora-base:valueHasStandoff AS ?objPred)
	          ?obj ?objPred ?objObj .
            ?objObj ?predStandoff ?objStandoff .
        }
        UNION
        {
            @* Get any other statements about the value. *@

            ?resource ?prop ?obj .

            FILTER NOT EXISTS {
                ?obj knora-base:isDeleted true .
            }

	          ?obj ?objPred ?objObj .

            FILTER(!(?objPred = knora-base:attachedToProject || ?objPred = knora-base:valueHasStandoff))
        }
    }
    UNION
    {
        @* Get link properties, i.e. properties that point to other Resource objects. *@

        ?prop rdfs:subPropertyOf* knora-base:hasLinkTo .
        BIND(true AS ?isLinkProp)

        ?resource ?prop ?obj .

        FILTER NOT EXISTS {
            ?obj knora-base:isDeleted true .
        }

        ?obj ?objPred ?objObj .
    }
}
