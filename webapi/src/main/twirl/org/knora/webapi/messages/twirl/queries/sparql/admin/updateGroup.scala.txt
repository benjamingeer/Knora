@*
 * Copyright Â© 2021 - 2024 Swiss National Data and Service Center for the Humanities and/or DaSCH Service Platform contributors.
 * SPDX-License-Identifier: Apache-2.0
 *@

@import org.knora.webapi.IRI
@import dsp.valueobjects.V2

@**
 * Updates an existing group with the provided values.
 *
 * @param dataNamedGraph    the named graph to update.
 * @param groupIri          the IRI of the group we want to update.
 * @param maybeName         the new optional value for name.
 * @param maybeDescriptions the new optional value for descriptions.
 * @param maybeProject      the new optional value for project.
 * @param maybeStatus       the new optional value for status.
 * @param maybeSelfjoin     the new optional value for selfjoin.
 *@
@(adminNamedGraphIri: IRI,
  groupIri: IRI,
  maybeName: Option[String],
  maybeDescriptions: Option[Seq[V2.StringLiteralV2]],
  maybeProject: Option[IRI],
  maybeStatus: Option[Boolean],
  maybeSelfjoin: Option[Boolean])

PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX knora-admin: <http://www.knora.org/ontology/knora-admin#>

WITH <@adminNamedGraphIri>
DELETE {

    @* Delete current values, for which we have a new one. *@

    @if(maybeName.nonEmpty) {
        ?group knora-admin:groupName ?currentName .
    }

    @if(maybeDescriptions.nonEmpty) {
        ?group knora-admin:groupDescriptions ?currentDescriptions .
    }

    @if(maybeProject.nonEmpty) {
        ?group knora-admin:belongsToProject ?currentProject .
    }

    @if(maybeStatus.nonEmpty) {
        ?group knora-admin:status ?currentStatus .
    }

    @if(maybeSelfjoin.nonEmpty) {
        ?group knora-admin:hasSelfJoinEnabled ?currentSelfjoin .
    }



} INSERT {

    @* Add the new values. *@

    @if(maybeName.nonEmpty) {
        ?group knora-admin:groupName "@maybeName.get"^^xsd:string .
    }

    @if(maybeDescriptions.nonEmpty) {
        @for(d <- maybeDescriptions.get) {
            @if(d.language.nonEmpty) {
                ?group knora-admin:groupDescriptions """@d.value"""@@@{d.language.get} .
            } else {
                ?group knora-admin:groupDescriptions """@d.value"""^^xsd:string .
            }
        }
    }

    @if(maybeProject.nonEmpty) {
        ?group knora-admin:belongsToProject <@maybeProject.get> .
    }

    @if(maybeStatus.nonEmpty) {
        ?group knora-admin:status "@maybeStatus.get"^^xsd:boolean .
    }

    @if(maybeSelfjoin.nonEmpty) {
        ?group knora-admin:hasSelfJoinEnabled "@maybeSelfjoin.get"^^xsd:boolean .
    }
}

WHERE {
    BIND(IRI("@groupIri") AS ?group)

    @* Get all current defined values. *@

    ?group knora-admin:groupName ?currentName .

    optional {?group knora-admin:groupDescriptions ?currentDescriptions .}

    ?group knora-admin:belongsToProject ?currentProject .

    ?group knora-admin:status ?currentStatus .

    ?group knora-admin:hasSelfJoinEnabled ?currentSelfjoin .
}
