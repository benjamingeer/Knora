@*
 * Copyright Â© 2021 - 2023 Swiss National Data and Service Center for the Humanities and/or DaSCH Service Platform contributors.
 * SPDX-License-Identifier: Apache-2.0
 *@

@import org.knora.webapi.IRI

@**
 * Looks for a `knora-base:LinkValue` given its IRI, returns all information about it, and checks whether the
 * corresponding direct link also exists.
 *
 * @param subjectIri the IRI of the resource that is the source of the link.
 * @param predicateIri the IRI of the property that links the two resources.
 * @param maybeObjectIRI if provided, the IRI of the target resource.
 * @param linkValueIri the IRI of the `LinkValue`.
 *@
@(subjectIri: IRI,
  predicateIri: IRI,
  maybeObjectIri: Option[IRI],
  linkValueIri: IRI)

prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>
prefix knora-base: <http://www.knora.org/ontology/knora-base#>

SELECT ?linkValue ?directLinkExists ?targetResourceClass ?objPred ?objObj

WHERE {
    BIND(IRI("@linkValueIri") AS ?linkValue)

    <@linkValueIri> rdf:type knora-base:LinkValue .

    FILTER NOT EXISTS {
        <@linkValueIri> knora-base:isDeleted true .
    }

    OPTIONAL {
        @maybeObjectIri match {
            case Some(objectIri) => {
                <@objectIri> rdf:type ?targetResourceClass .
            }

            case None => {
                <@subjectIri> <@predicateIri> ?object .
                ?object rdf:type ?targetResourceClass .
            }
        }

        BIND(true AS ?directLinkExists)
    }

    {
        <@linkValueIri> ?objPred ?objObj .
    }
    UNION
    {
        @* Return the project of the resource that contains the value. *@

        <@subjectIri> knora-base:attachedToProject ?resourceProject .

        BIND(knora-base:attachedToProject AS ?objPred)
        BIND(?resourceProject AS ?objObj)
    }
}
