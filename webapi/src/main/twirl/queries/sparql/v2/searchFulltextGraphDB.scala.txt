@*
 * Copyright © 2015 Lukas Rosenthaler, Benjamin Geer, Ivan Subotic,
 * Tobias Schweizer, André Kilchenmann, and Sepideh Alassi.
 *
 * This file is part of Knora.
 *
 * Knora is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Knora is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public
 * License along with Knora.  If not, see <http://www.gnu.org/licenses/>.
 *@

@import org.knora.webapi.IRI
@import org.knora.webapi.SparqlGenerationException

@*
 * Performs a simple full-text search using GraphDB.
 *
 * This template is used only by searchFulltext.scala.txt.
 *
 * Since the triplestore type is GraphDB, we assume that inference is enabled, and we use it to optimise the generated
 * SPARQL. Specifically, we use inference to return search results matching subclasses of the resource class
 * specified by the user. This requires us to use GraphDB's GRAPH <http://www.ontotext.com/explicit> whenever
 * we need to get explicit (non-inferred) statements.
 *
 * @param searchTerms search terms.
 *@
@(searchTerms: String)

PREFIX knora-base: <http://www.knora.org/ontology/knora-base#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

CONSTRUCT {
	?matchingSubject ?matchingProperty ?literal .

    # include this inferred information in the results, needed to identify value properties
	?resource knora-base:hasValue ?valueObject .

    ?valueObject knora-base:attachedToUser ?valueObjectCreator ;
        knora-base:hasPermissions ?valueObjectPermissions ;
        a ?valueObjectType ;
        ?valueObjectProperty ?valueObjectValue .

    # include this inferred information in the results, needed to identify resources
    ?resource a knora-base:Resource ;
        knora-base:isMainResource true ;
        ?resourceProperty ?matchingSubject ;
        rdfs:label ?label .

    # indicates if the resource's label matched the search pattern
    ?resource knora-base:labelMatched ?labelMatched .

    ?resource a ?resourceType ;
        knora-base:attachedToUser ?resourceCreator ;
        knora-base:hasPermissions ?resourcePermissions ;
        knora-base:attachedToProject ?referredResourceProject .
}

WHERE {
    {

        # make a subquery to find triples matching the query string
        # limit the number of results in order to prevent an error when writing the results back (may be too many)
        SELECT DISTINCT ?matchingSubject ?matchingProperty ?literal WHERE {

            GRAPH <http://www.ontotext.com/explicit> {
                ?matchingSubject ?matchingProperty ?literal .
            }

            ?literal <http://www.ontotext.com/owlim/lucene#fullTextSearchIndex> '@searchTerms' .
        }
        @* TODO: support paging using OFFSET *@
        ORDER BY ?matchingSubject
        LIMIT 500
    }

    OPTIONAL {
        ?matchingSubject a knora-base:Resource .
        BIND(true AS ?labelMatched)
    }

    OPTIONAL {
        ?matchingSubject a knora-base:Value .
        ?containingResource knora-base:hasValue ?matchingSubject .


        GRAPH <http://www.ontotext.com/explicit> {
            ?containingResource ?resourceProperty ?matchingSubject .
            ?matchingSubject a ?valueObjectType .
            ?matchingSubject ?valueObjectProperty ?valueObjectValue .
        }


        FILTER(?valueObjectType != knora-base:LinkValue)

        BIND(?matchingSubject AS ?valueObject)

        ?valueObject knora-base:isDeleted false ;
            knora-base:attachedToUser ?valueObjectCreator ;
            knora-base:hasPermissions ?valueObjectPermissions .

    }

    # If the previous OPTIONAL clause was executed, ?matchingSubject is a value object, and ?containingResource will be set.
    # Otherwise, ?matchingSubject is a resource (its rdfs:label matched the search pattern).
    BIND(COALESCE(?containingResource, ?matchingSubject) AS ?resource)

    ?resource a knora-base:Resource ;
        knora-base:isDeleted false .

    GRAPH <http://www.ontotext.com/explicit> {
        ?resource a ?resourceType .
    }

    ?resource rdfs:label ?label .

    ?resource knora-base:attachedToUser ?resourceCreator ;
            knora-base:hasPermissions ?resourcePermissions ;
            knora-base:attachedToProject ?referredResourceProject .

}