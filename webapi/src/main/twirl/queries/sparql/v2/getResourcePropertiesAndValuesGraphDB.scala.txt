@*
 * Copyright © 2015 Lukas Rosenthaler, Benjamin Geer, Ivan Subotic,
 * Tobias Schweizer, André Kilchenmann, and Sepideh Alassi.
 *
 * This file is part of Knora.
 *
 * Knora is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Knora is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public
 * License along with Knora.  If not, see <http://www.gnu.org/licenses/>.
 *@

@import org.knora.webapi.IRI
@import org.knora.webapi.SparqlGenerationException

@*
 * Performs a resource request using GraphDB.
 *
 * This template is used only by getResourcePropertiesAndValues.scala.txt.
 *
 *
 * @param resourceIri the Iri of the requested resource.
 *@
@(resourceIri: String)

PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX knora-base: <http://www.knora.org/ontology/knora-base#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
CONSTRUCT {
    # include this inferred information in the results, needed to identify resources
    ?resource a knora-base:Resource .
    ?resource knora-base:isMainResource true .
    ?resource knora-base:attachedToProject ?resourceProject .
    ?resource rdfs:label ?label .
    ?resource a ?resourceType .
    ?resource knora-base:attachedToUser ?resourceCreator ;
            knora-base:hasPermissions ?resourcePermissions .

    # include this inferred information in the results, needed to identify value properties
    ?resource knora-base:hasValue ?valueObject .
    ?resource ?resourceValueProperty ?valueObject .
    ?valueObject ?valueObjectProperty ?valueObjectValue .

    ?standoffNode ?standoffProperty ?standoffValue .

    # include this inferred information in the results, needed to identify linking properties
    ?resource knora-base:hasLinkTo ?referredResource .
    ?referredResource a knora-base:Resource .
    ?resource ?resourceLinkProperty ?referredResource .

    ?referredResource rdfs:label ?referredResourceLabel .
    ?referredResource a ?referredResourceType .
    ?referredResource knora-base:isMainResource false .

    ?referredResource knora-base:attachedToUser ?referredResourceCreator ;
        knora-base:hasPermissions ?referredResourcePermissions ;
        knora-base:attachedToProject ?referredResourceProject .


} WHERE {
    BIND(IRI("@resourceIri") as ?resource)

    ?resource rdf:type knora-base:Resource ;
        knora-base:isDeleted false ;
        knora-base:attachedToProject ?resourceProject .

    ?resource rdfs:label ?label .

    GRAPH <http://www.ontotext.com/explicit> {
        ?resource a ?resourceType .
    }

    ?resource knora-base:attachedToUser ?resourceCreator ;
            knora-base:hasPermissions ?resourcePermissions .

    {
        ?resource knora-base:hasValue ?valueObject .

        ?valueObject a knora-base:Value ;
            knora-base:isDeleted false .

        {
            GRAPH <http://www.ontotext.com/explicit> {
                ?resource ?resourceValueProperty ?valueObject .

                ?valueObject a ?valueObjectType .
                ?valueObject ?valueObjectProperty ?valueObjectValue .
            }
        } UNION {
            GRAPH <http://www.ontotext.com/explicit> {
                ?valueObject knora-base:valueHasStandoff ?standoffNode .
                ?standoffNode ?standoffProperty ?standoffValue .
            }
        }
    } UNION {

        ?resource knora-base:hasLinkTo ?referredResource .

        ?referredResource a knora-base:Resource ;
            knora-base:isDeleted false .

        GRAPH <http://www.ontotext.com/explicit> {
            ?resource ?resourceLinkProperty ?referredResource .

            ?referredResource rdfs:label ?referredResourceLabel .
            ?referredResource a ?referredResourceType .

            ?referredResource knora-base:attachedToUser ?referredResourceCreator ;
                        knora-base:hasPermissions ?referredResourcePermissions ;
                        knora-base:attachedToProject ?referredResourceProject .
        }

    } UNION {
        # there might by resources that have neither values nor links
    }

}