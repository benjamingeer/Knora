@*
 * Copyright Â© 2015-2019 the contributors (see Contributors.md).
 *
 * This file is part of Knora.
 *
 * Knora is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Knora is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public
 * License along with Knora.  If not, see <http://www.gnu.org/licenses/>.
 *@

@import java.time.Instant
@import org.knora.webapi.IRI
@import org.knora.webapi.util.SmartIri
@import org.knora.webapi.SparqlGenerationException

@**
 * Gets the values of all the Knora properties of one or more resources.
 *
 * If the triplestore type is GraphDB, this template delegates to getResourcePropertiesAndValuesGraphDB.sparql.txt,
 * which is optimised for GraphDB. Otherwise, it delegates to getResourcePropertiesAndValuesStandard.sparql.txt.
 *
 * @param triplestore      the name of the triplestore being used.
 * @param resourceIris     the IRIs of the requested resources.
 * @param preview          indicates if the request should only return preview information.
 * @param maybePropertyIri if defined, only returns values of the specified explicit property.
 *                         Cannot be used in conjunction with preview.
 * @param maybeVersionDate if defined, requests the state of the resources at the specified
 *                         time in the past. Cannot be used in conjunction with preview.
 *@
@(triplestore: String,
  resourceIris: Seq[IRI],
  preview: Boolean,
  maybePropertyIri: Option[SmartIri] = None,
  maybeVersionDate: Option[Instant] = None)

@if(preview && (maybeVersionDate.isDefined || maybePropertyIri.isDefined)) {
    @{throw SparqlGenerationException(s"A preview cannot be requested with a property or a version date"); ()}
}

@if(triplestore.startsWith("graphdb")) {
    @{
        queries.sparql.v2.txt.getResourcePropertiesAndValuesGraphDB(resourceIris = resourceIris,
                                                                    preview = preview,
                                                                    maybePropertyIri = maybePropertyIri,
                                                                    maybeVersionDate = maybeVersionDate)
    }
} else {
    @{
        queries.sparql.v2.txt.getResourcePropertiesAndValuesStandard(triplestore = triplestore,
                                                                    resourceIris = resourceIris,
                                                                    preview = preview,
                                                                    maybePropertyIri = maybePropertyIri,
                                                                    maybeVersionDate = maybeVersionDate)
    }
}