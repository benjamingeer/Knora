@*
 * Copyright Â© 2015-2018 the contributors (see Contributors.md).
 *
 * This file is part of Knora.
 *
 * Knora is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Knora is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public
 * License along with Knora.  If not, see <http://www.gnu.org/licenses/>.
 *@

@import org.knora.webapi._
@import org.knora.webapi.util.SmartIri
@import java.time.Instant

@*
 * Changes the metadata of a resource.
 *
 * @param triplestore the name of the triplestore being used.
 * @param dataNamedGraph the named graph in which the project stores its data.
 * @param resourceIri the IRI of the resource.
 * @param resourceClassIri the IRI of the resource class.
 * @param lastModificationDate the xsd:dateTimeStamp that was attached to the resource when it was last modified.
 * @param newModificationDate the xsd:dateTimeStamp to be attached to the resource as a result of this modification.
 * @param maybeLabel the resource's new label, if any.
 * @param maybePermissions the resource's new permissions, if any.
 *@
@(triplestore: String,
  dataNamedGraph: IRI,
  resourceIri: IRI,
  resourceClassIri: SmartIri,
  maybeLastModificationDate: Option[Instant],
  newModificationDate: Instant,
  maybeLabel: Option[String],
  maybePermissions: Option[String])

PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX knora-base: <http://www.knora.org/ontology/knora-base#>

DELETE {
    GRAPH ?dataNamedGraph {
        @maybeLastModificationDate match {
            case Some(lastModificationDate) => {
                ?resource knora-base:lastModificationDate "@lastModificationDate"^^xsd:dateTimeStamp .
            }

            case None => {}
        }

        @maybeLabel match {
            case Some(newLabel) => {
                ?resource rdfs:label ?oldLabel .
            }

            case None => {}
        }

        @maybePermissions match {
            case Some(newPermissions) => {
                ?resource knora-base:hasPermissions ?oldPermissions .
            }

            case None => {}
        }
    }
} INSERT {
    GRAPH ?dataNamedGraph {
        ?resource knora-base:lastModificationDate "@newModificationDate"^^xsd:dateTimeStamp .

        @maybeLabel match {
            case Some(newLabel) => {
                ?resource rdfs:label """@newLabel"""^^xsd:string .
            }

            case None => {}
        }

        @maybePermissions match {
            case Some(newPermissions) => {
                ?resource knora-base:hasPermissions "@newPermissions"^^xsd:string .
            }

            case None => {}
        }
    }
}
@* Ensure that inference is not used in the WHERE clause of this update. *@
@if(triplestore.startsWith("graphdb")) {
    USING <http://www.ontotext.com/explicit>
}
WHERE {
    BIND(IRI("@dataNamedGraph") AS ?dataNamedGraph)
    BIND(IRI("@resourceIri") AS ?resource)
    BIND(IRI("@resourceClassIri") AS ?resourceClass)

    GRAPH ?dataNamedGraph {
        ?resource rdf:type ?resourceClass .

        @maybeLastModificationDate match {
            case Some(lastModificationDate) => {
                ?resource knora-base:lastModificationDate "@lastModificationDate"^^xsd:dateTimeStamp .
            }

            case None => {
                FILTER NOT EXISTS {
                    ?resource knora-base:lastModificationDate ?anyLastModificationDate .
                }
            }
        }

        @maybeLabel match {
            case Some(newLabel) => {
                ?resource rdfs:label ?oldLabel .
            }

            case None => {}
        }

        @maybePermissions match {
            case Some(newPermissions) => {
                ?resource knora-base:hasPermissions ?oldPermissions .
            }

            case None => {}
        }
    }
}
