@*
 * Copyright © 2015 Lukas Rosenthaler, Benjamin Geer, Ivan Subotic,
 * Tobias Schweizer, André Kilchenmann, and André Fatton.
 *
 * This file is part of Knora.
 *
 * Knora is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Knora is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public
 * License along with Knora.  If not, see <http://www.gnu.org/licenses/>.
 *@

@import org.knora.webapi.IRI

@**
 * Creates a new version of a value, with identical content except for a new comment.
 *
 * @param dataNamedGraph the named graph to update.
 * @param triplestore the name of the triplestore being used. The template uses this value to exclude inferred
                      results from the WHERE clause of the update.
 * @param userIri the IRI of the user we want to update the value.
 * @param propertyIri the IRI of the property that points from the user to the value.
 * @param currentValue the current value.
 * @param newValueIri the new value.
 *@
@(adminNamedGraphIri: IRI,
  triplestore: String,
  userIri: IRI,
  propertyIri: IRI,
  currentValue: String,
  newValue: String)

prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>
prefix knora-base: <http://www.knora.org/ontology/knora-base#>

WITH <@adminNamedGraphIri>
DELETE {
    @* Delete the current value if available. *@
    ?user ?property @currentValue .

} INSERT {
    @* Add new value. *@
    ?user ?property @newValue .

}
@*

GraphDB's consistency checking requires reasoning, but reasoning interferes with certain things
in the WHERE clauses of our SPARQL updates, so we set a GraphDB-specific flag to return only
explicit statements in the WHERE clause here.

*@
@triplestore match {
    case "graphdb" | "graphdb-free" => {
        USING <http://www.ontotext.com/explicit>
    }

    case other => {}
}
WHERE {
    BIND(IRI("@userIri") AS ?user)
    BIND(IRI("@propertyIri") AS ?property)

    @* Get the property, if it has one defined, so we can update it. *@

    OPTIONAL {
        ?user ?property @currentValue .
    }
}
